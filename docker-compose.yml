version: '3.8'

services:
  noc-backend:
    build: ./backend
    environment:
      - INFLUXDB_URL=http://influxdb:8086
    depends_on:
      - influxdb
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.noc-backend.rule=Host(`noc.tawfiqulbari.work`) && PathPrefix(`/api`)"
      - "traefik.http.routers.noc-backend.tls=true"
      - "traefik.http.routers.noc-backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.noc-backend.loadbalancer.server.port=8000"

  influxdb:
    image: influxdb:2.7
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=monitoring
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token
    networks:
      - app-network

  noc-frontend:
    image: node:18
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev"
    depends_on:
      - noc-backend
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.noc-frontend.rule=Host(`noc.tawfiqulbari.work`)"
      - "traefik.http.routers.noc-frontend.tls=true"
      - "traefik.http.routers.noc-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.noc-frontend.loadbalancer.server.port=3000"

volumes:
  influxdb-data:

networks:
  app-network:
    external: true